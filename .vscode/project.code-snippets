{
	// Place your Code Reviews workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    "Jasmine Unit Tests": {
		"scope": "typescript",
		"prefix": "testing.jut",
		"body": [
			"it(\"${1:member name} -> ${2:scenario} -> ${3:expectation}\", () => {",
                "\t// Arrange",
                "\t",
                "\t// Act",
                "\t",
                "\t// Assert",
            "});"
		],
		"description": "(J)asmine (U)nit (T)est"
	},
    "Single Parameterized Jasmine Unit Tests": {
		"scope": "typescript",
		"prefix": "testing.single.jut",
		"body": [
			"eachParams1([",
                "\t{ p1: ${1:ParamValue}, },",
            "], (${2:ParamName}: ${3:ParamDataType}) => {",
			    "\tit(\"${4:MemberName} -> ${5:Scenario} -> ${6:Expectation}\", () => {",
                "\t\t// Arrange",
                "\t\t",
                "\t\t// Act",
                "\t\t",
                "\t\t// Assert",
                "\t});",
            "});"
		],
		"description": "Single Parameterized Jasmine Unit Test"
	},
    "2 Parameter Jasmine Unit Tests": {
		"scope": "typescript",
		"prefix": "testing.2param.jut",
		"body": [
			"eachParams2([",
                "\t{ p1: ${1:Param1Value}, p2: ${2:Param2Value}, },",
            "], (${3:Param1Name}: ${4:Param1Type}, ${5:Param2Name}: ${6:Param2Type}) => {",
			    "\tit(\"${7:MemberName} -> ${8:Scenario} -> ${9:Expectation}\", () => {",
                "\t\t// Arrange",
                "\t\t",
                "\t\t// Act",
                "\t\t",
                "\t\t// Assert",
                "\t});",
            "});"
		],
		"description": "2 Parameter Jasmine Unit Test"
	},
    "3 Parameter Jasmine Unit Tests": {
		"scope": "typescript",
		"prefix": "testing.3param.jut",
		"body": [
			"eachParams3([",
                "\t{ p1: ${1:Param1Value}, p2: ${2:Param2Value}, p3: ${3:Param3Value}, },",
            "], (${4:Param1Name}: ${5:Param1Type}, ${6:Param2Name}: ${7:Param2Type}, ${8:Param3Name}: ${9:Param3Type}) => {",
			    "\tit(\"${10:MemberName} -> ${11:Scenario} -> ${12:Expectation}\", () => {",
                "\t\t// Arrange",
                "\t\t",
                "\t\t// Act",
                "\t\t",
                "\t\t// Assert",
                "\t});",
            "});"
		],
		"description": "3 Parameter Jasmine Unit Test"
	},
}
